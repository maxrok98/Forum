@page "/subscribtions"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Microsoft.AspNetCore.Authorization.Authorize]

@if (user == null)
{
    <Loader/>
}
else
{

    @if (user.Subscription.Count == 0)
    {
        <h1>You need to subscribe to some thread to see you personal subscribtion list</h1>
    }
    else
    {
    <div class="container">
        <div class="row">
            <PostsList ThreadId="@threads.ToString()"></PostsList>
        </div>
    </div>
    }
}



@code {
    System.Text.StringBuilder threads;

    UserResponse user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var User = authState.User;
        if (User.Identity.IsAuthenticated)
        {
            var id = User.FindFirst(c => c.Type == "id")?.Value;
            await LoadUserInfo(id);
        }

        threads = new System.Text.StringBuilder();
        foreach (var threadid in user.Subscription)
            threads.Append(threadid.Id + " ");
    }


    protected async Task LoadUserInfo(string id)
    {

        var responce = await Http.GetAsync(ApiRoutes.User.Get.Replace("{id}", id));

        var format = "image/jpeg";
        if (responce.IsSuccessStatusCode)
        {
            user = await responce.Content.ReadFromJsonAsync<UserResponse>();
        }
    }

}
